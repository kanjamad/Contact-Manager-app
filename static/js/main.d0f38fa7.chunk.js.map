{"version":3,"sources":["components/header/Header.js","components/addContact/AddContact.js","components/contactCard/ContactCard.js","components/contactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AddContact","state","name","email","add","e","preventDefault","console","log","props","addContactHandler","setState","alert","onSubmit","this","type","placeholder","value","onChange","target","React","Component","ContactCard","contact","id","onClick","clickHander","ContactList","deleteConactHandler","getContactId","renderData","contacts","map","App","LOCAL_STORAGE_KEY","useState","setContacts","useEffect","retriveContacts","JSON","parse","localStorage","getItem","setItem","stringify","uuid","newContactList","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAWeA,EARA,WACb,OACE,qBAAKC,UAAU,MAAf,SACE,oD,6BCuCSC,G,kNAzCbC,MAAQ,CACNC,KAAM,GACNC,MAAO,I,EAETC,IAAM,SAACC,GACLA,EAAEC,iBACsB,KAApB,EAAKL,MAAMC,MAAoC,KAArB,EAAKD,MAAME,OAIzCI,QAAQC,IAAI,EAAKP,OACjB,EAAKQ,MAAMC,kBAAkB,EAAKT,OAClC,EAAKU,SAAS,CAAET,KAAM,GAAIC,MAAO,MAL/BS,MAAM,kC,4CAOV,WAAU,IAAD,OACP,OACE,8BACE,uBAAMC,SAAUC,KAAKV,IAArB,UACE,uBACEF,KAAK,OACLa,KAAK,OACLhB,UAAU,iBACViB,YAAY,OACZC,MAAOH,KAAKb,MAAMC,KAClBgB,SAAU,SAACb,GAAD,OAAO,EAAKM,SAAS,CAAET,KAAMG,EAAEc,OAAOF,WAElD,uBACEf,KAAK,QACLa,KAAK,OACLhB,UAAU,iBACViB,YAAY,QACZC,MAAOH,KAAKb,MAAME,MAClBe,SAAU,SAACb,GAAD,OAAO,EAAKM,SAAS,CAAER,MAAOE,EAAEc,OAAOF,WAEnD,uBAAOF,KAAK,SAASE,MAAM,oB,GAnCZG,IAAMC,YCahBC,G,MAbK,SAACb,GAAW,IAAD,EACDA,EAAMc,QAA1BC,EADqB,EACrBA,GAAItB,EADiB,EACjBA,KAAMC,EADW,EACXA,MAClB,OACE,sBAAKJ,UAAU,OAAf,UACE,4BAAIG,IACJ,4BAAIC,IACJ,+BACE,mBAAGJ,UAAU,eAAe0B,QAAS,kBAAMhB,EAAMiB,YAAYF,aCUtDG,G,MAhBK,SAAClB,GACnB,IAAMmB,EAAsB,SAACJ,GAC3Bf,EAAMoB,aAAaL,IAEfM,EAAarB,EAAMsB,SAASC,KAAI,SAACT,GACrC,OACE,cAAC,EAAD,CAEEA,QAASA,EACTG,YAAaE,GAFRL,EAAQC,OAMnB,OAAO,8BAAMM,M,MCwBAG,MAlCf,WACE,IAAMC,EAAoB,WADb,EAEmBC,mBAAS,IAF5B,mBAENJ,EAFM,KAEIK,EAFJ,KAyBb,OATAC,qBAAU,WACR,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQR,IACpDI,GAAiBF,EAAYE,KAChC,IAEHD,qBAAU,WACRI,aAAaE,QAAQT,EAAmBK,KAAKK,UAAUb,MACtD,CAACA,IAGF,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYrB,kBAzBU,SAACa,GACzBhB,QAAQC,IAAIe,GACZa,EAAY,GAAD,mBAAKL,GAAL,cAAiBP,GAAIqB,kBAAWtB,SAwBzC,cAAC,EAAD,CAAaQ,SAAUA,EAAUF,aArBR,SAACL,GAC5B,IAAMsB,EAAiBf,EAASgB,QAAO,SAACxB,GACtC,OAAOA,EAAQC,KAAOA,KAGxBY,EAAYU,UCRDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d0f38fa7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"App\">\n      <h2>Contact Manager</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./addContact.css\";\n\nclass AddContact extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n  };\n  add = (e) => {\n    e.preventDefault();\n    if (this.state.name === \"\" || this.state.email === \"\") {\n      alert(\"ALl the fields are mandatory!\");\n      return;\n    }\n    console.log(this.state);\n    this.props.addContactHandler(this.state);\n    this.setState({ name: \"\", email: \"\" });\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.add}>\n          <input\n            name=\"name\"\n            type=\"text\"\n            className=\"feedback-input\"\n            placeholder=\"Name\"\n            value={this.state.name}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n          <input\n            name=\"email\"\n            type=\"text\"\n            className=\"feedback-input\"\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChange={(e) => this.setState({ email: e.target.value })}\n          />\n          <input type=\"submit\" value=\"SUBMIT\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\nimport \"./contactCard.css\";\n\nconst ContactCard = (props) => {\n  const { id, name, email } = props.contact;\n  return (\n    <div className=\"list\">\n      <p>{name}</p>\n      <p>{email}</p>\n      <span>\n        <i className=\"fas fa-trash\" onClick={() => props.clickHander(id)}></i>\n      </span>\n    </div>\n  );\n};\n\nexport default ContactCard;\n","import React from \"react\";\nimport ContactCard from \"../contactCard/ContactCard\";\nimport \"./contactList.css\";\n\nconst ContactList = (props) => {\n  const deleteConactHandler = (id) => {\n    props.getContactId(id);\n  };\n  const renderData = props.contacts.map((contact) => {\n    return (\n      <ContactCard\n        key={contact.id}\n        contact={contact}\n        clickHander={deleteConactHandler}\n      />\n    );\n  });\n  return <div>{renderData}</div>;\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport Header from \"./components/header/Header\";\nimport AddContact from \"./components/addContact/AddContact\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport \"./App.css\";\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const addContactHandler = (contact) => {\n    console.log(contact);\n    setContacts([...contacts, { id: uuid(), ...contact }]);\n  };\n\n  const removeContactHandler = (id) => {\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  useEffect(() => {\n    const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retriveContacts) setContacts(retriveContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      <Header />\n      <AddContact addContactHandler={addContactHandler} />\n      <ContactList contacts={contacts} getContactId={removeContactHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}